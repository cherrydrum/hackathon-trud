import json
from sklearn.linear_model import LogisticRegression
from sklearn.feature_extraction.text import CountVectorizer


def forms(s):
    s = str(s).lower()
    res = []
    if s[-1]=='а':  # 1 склонение
        res.append(s)  # И
        res.append(s[:-1]+'ы')  # Р
        res.append(s[:-1]+'е')  # Д
        res.append(s[:-1]+'у')  # В
        res.append(s[:-1]+'ой')  # Т
        res.append(s[:-1]+'е')  # П
    if s[-1]=='я':  # 1 склонение
        res.append(s)  # И
        res.append(s[:-1]+'и')  # Р
        res.append(s[:-1]+'е')  # Д
        res.append(s[:-1]+'ю')  # В
        res.append(s[:-1]+'ей')  # Т
        res.append(s[:-1]+'е')  # П
    elif s[-1]=='о':  # 2 склонение (с окончанием)
        res.append(s)  # И
        res.append(s[:-1]+'а')  # Р
        res.append(s[:-1]+'у')  # Д
        res.append(s)  # В
        res.append(s[:-1]+'ом')  # Т
        res.append(s[:-1]+'е')  # П
    elif s[-1]=='е':  # 2 склонение (с окончанием)
        res.append(s)  # И
        res.append(s[:-1]+'я')  # Р
        res.append(s[:-1]+'ю')  # Д
        res.append(s)  # В
        res.append(s[:-1]+'ем')  # Т
        res.append(s[:-1]+'и')  # П
    elif s[-1]=='ь':  # 3 склонение
        res.append(s)  # И
        res.append(s[:-1]+'и')  # Р
        res.append(s[:-1]+'и')  # Д
        res.append(s[:-1]+'и')  # В
        res.append(s[:-1]+'ью')  # Т
        res.append(s[:-1]+'и')  # П
    else:
        res.append(s)
    return list(set(res))

def category_percent(token_vocabulary):
    # создаем базу тег - професиия

    professions_category_tokens = {
    "Сфера обслуживания": [
        "агрегатор",
        "меню",
        "пирог",
        "отель",
        "заказывать",
        "администратор",
        "сауна",
        "официант",
        "распродажа",
        "консультант",
        "предоплата",
        "татуаж",
        "прайс",
        "хозтовары",
        "курорт",
        "расценка",
        "кошелёк",
        "барбер",
        "борода",
        "боулинг",
        "плата",
        "стажер",
        "автозапчасть",
        "маникюр",
        "визажист",
        "педикюр",
        "пончик",
        "кафе",
        "позвонить",
        "стилист",
        "абонемент",
        "парикмахер",
        "массаж",
        "сок",
        "барбершоп",
        "заказ",
        "цветовод",
        "самовывоз",
        "причёска",
        "сервис",
        "остаться",
        "окрашивание",
        "паста",
        "мужскиестрижка",
        "оплата",
        "пекарня",
        "эпиляция",
        "акция"
    ],
    "Политика": [
        "евросоюз",
        "закон",
        "министерство",
        "риа",
        "година",
        "право",
        "эмиграция",
        "документ",
        "реставрация",
        "конвенция",
        "рада",
        "диктатор",
        "конституция",
        "поволжье",
        "мадагаскар",
        "сша",
        "таиланд",
        "президент",
        "население",
        "лига",
        "мид"
    ],
    "Медицина": [
        "лечить",
        "клаустрофобия",
        "витамин",
        "аптека",
        "синдром",
        "плоскостопие",
        "грыж",
        "грыжа",
        "врач",
        "оздоравливать",
        "зрение",
        "дефектолог",
        "бешенство",
        "дисфункция",
        "позвоночник",
        "аборт",
        "роды",
        "логопед",
        "поликлиника"
    ],
    "Домоводство": [
        "сарафан",
        "готовить",
        "еда",
        "вязать",
        "оливья",
        "кофточка",
        "уют",
        "самоучка",
        "кухня",
        "ателье",
        "садовник",
        "ушить",
        "баранина",
        "декорирование",
        "вязальщица",
        "мастерство",
        "кулинар",
        "рецепт",
        "хозяйство"
    ],
    "IT": [
        "программирование",
        "ютюб",
        "иллюстратор",
        "дизайнер",
        "форум",
        "робототехника",
        "техника",
        "тильда",
        "интернет",
        "перезагрузка",
        "робот",
        "сайт",
        "информация",
        "статистика",
        "разработчик",
        "проект",
        "код",
        "программа",
        "система",
        "разработка",
        "данные",
        "информация",
        "приложение",
        "сервер",
        "программист",
        "фотошоп",
        "разработка",
    ],
    "Кино и тв": [
        "кинокритик",
        "кинопремия",
        "видео",
        "тв",
        "видеоматериал",
        "кинотеатр",
        "кадр",
        "киномания",
        "телеканал",
        "фильм",
        "кинофестиваль",
        "кинокомпозитор",
        "кинорежиссёр",
    ],
    "Театр": [
        "пьеса",
        "билет",
        "оркестр",
        "театр",
        "режиссёр",
        "хореограф",
        "сцена",
        "артист",
        "зритель",
        "акт"
    ],
    "Искусство и культура": [
        "цвет",
        "видеоролик",
        "мероприятие",
        "танец",
        "дискография",
        "фотографировать",
        "творчество",
        "картина",
        "художник",
        "культура",
        "репродукция",
        "абсурд",
        "композитор",
        "чувство",
        "роман",
        "актёр",
        "рамадан",
        "пейзаж",
        "коллокация",
        "эрмитажа",
        "сфера",
        "фотосессия",
        "среда",
        "искусство",
        "фотоколлаж",
        "фотограф",
        "видеосъемка",
        "фотоальбом",
        "скульптура",
        "джаз",
        "выставка",
        "фотография",
        "категория",
        "фотокамера",
        "портрет",
        "данс",
        "романтик",
        "музей",
        "кастанеда",
        "художня",
    ],
    "Спорт": [
        "спорт",
        "боев",
        "теннис",
        "футбол",
        "марафон",
        "двигаться",
        "гимнастика",
        "тренер",
        "цигун",
        "йога",
        "жим",
        "бассейн",
        "тайцзы",
        "стадион",
        "кроссфита",
        "ставка",
        "чемпион",
        "спортзал",
        "хореография",
        "тренировка",
        "чемпионат",
        "басейн"
    ],
    "Литература и тексты": [
        "газета",
        "юлий",
        "литература",
        "типография",
        "опубликовываться",
        "редактор",
        "книжка",
        "притча",
        "лексика",
        "цитата",
        "опубликовать",
        "псевдоним",
        "персонаж",
        "авторство",
        "душа",
        "строчка",
        "перо",
        "маркс",
        "сюжет",
        "литрес",
        "дискутировать",
        "лермонтов",
        "ваджр",
        "журналист",
        "гоголь",
        "опечатка",
        "писание",
        "опубликоваться",
        "ангел",
        "буквоед",
        "сочинение",
        "редакция"
    ],
    "Гуманитарные науки": [
        "легион",
        "логопедия",
        "книга",
        "грамматика",
        "говорение",
        "логика",
        "средневековье",
        "история",
        "совершенствоваться",
        "психоанализ",
        "англ",
        "эрудит",
        "язык",
        "китаец"
    ],
    "Полиция": [
        "маньяк",
        "законодательство",
        "справка",
        "дтп",
        "гражданин",
        "ознакомление",
        "надзор",
        "справедливость",
        "инструктор",
        "холодное",
        "дписник",
        "наружное",
        "юстиция",
        "служба",
        "ограбление"
    ],
    "Работа в офисе": [
        "вопрос",
        "опт",
        "брошюровка",
        "предприниматель",
        "менеджер",
        "сотрудник",
        "отчёт",
        "фирма",
        "рекламодатель",
        "ежедневник",
        "подписывать",
        "корпоратив",
        "персонал",
        "залипать",
        "коллега"
    ],
    "Естественные и технические науки": [
        "ломоносов",
        "вселенная",
        "наука",
        "химик",
        "спектр",
        "дерево",
        "исследование",
        "теория",
        "технология",
        "арифметик",
        "математика",
        "архитектура",
        "грант",
        "читатель",
        "публиковать",
        "мероприятие",
        "химия",
        "наука",
        "исследование",
        "данные",
        "исследователь",
        "лаборант",
        "ученый",
        "статья",
        "подписчик",
        "химик",
        "лаборатория",
        "технарь",
        "инженер",
        "отдел",
        "элемент",
        "соединение",
        "методика",
        "раствор",
        "кристалл"
    ],
    "Работа на предприятии": [
        "комплектование",
        "жирность",
        "запчасть",
        "изготовление",
        "продукция",
        "оборудование",
        "производство",
        "пружина",
        "технолог",
        "сборка",
        "рабочий",
        "завод",
        "предприятие",
        "продукт",
        "пресс",
        "бригада",
        "бригадри",
        "цех",
        "установка",
        "разгрузка",
        "распоряжение",
        "стройка"
    ],
    "Преподавание": [
        "семинар",
        "педагогика",
        "лекция",
        "учиться",
        "университет",
        "методист",
        "учитель",
        "вебинар",
        "образование",
        "лицей",
        "школьник",
        "школа",
        "обучение",
        "класс",
        "педагог",
        "академия",
        "егэ",
        "ученик",
        "учитель",
        "предмет",
        "директор",
        "школа",
        "школьник",
        "ученик",
        "обучение",
        "предмет"
        "кампус",
        "кафедра",
        "студент",
        "университет",
        "институт",
        "преподаватель",
        "профессор",
        "семестр",
        "экзамен",
        "обучение",
        "научить",
        "факультет"
    ],
    "Ремонт и строительство": [
        "дорога",
        "комната",
        "ремонт",
        "электричество",
        "шкаф",
        "мебель",
        "замерщик",
        "спальня",
        "строительство",
        "цемент",
        "интерьерчик",
        "машина",
        "дача",
        "строитель",
        "комод",
        "фурнитура",
        "гарнитур"
    ],
    "Служба безопасности": [
        "спасение",
        "антисаботаж",
        "оборона",
        "возгореться",
        "мчс",
        "защита",
        "охрана",
        "вызов",
        "тревога",
        "объект",
        "чп",
        "чрезвычайный",
        "авария",
        "срочно"
    ],
    "Общественная деятельность": [
        "спонсор",
        "опрос",
        "благотворительность",
        "деятель",
        "студсоюз",
        "сообщество",
        "конференция",
        "беседа",
        "пост",
        "паблик",
        "помощь"
    ]
}

    X = []  # тег
    Y = []  # профессия
    for proff, tag in professions_category_tokens.items():
        X += tag
        for i in range(len(tag)):
            Y.append(proff)
    
    # создаем базу падежи и теги профессии - профессия
    Xp = []
    Yp = []
    for i in range(len(X)) :
        f = forms(X[i])
        Xp += f
        Yp += [Y[i]] * len(f)
        
    #print(len(Xp),len(Yp))
    
    vectorizer = CountVectorizer()  # векторизируем текст Xp
    Xp = vectorizer.fit_transform(Xp)
    
    clf = LogisticRegression()  # обучаем нейросеть
    clf.fit(Xp,Yp)
    
    # сортируем пары ключ - значение по максимальному значению
    keys = []  
    values = []
    for key, value in token_vocabulary.items():
        keys.append(key)
        values.append(int(value*100))
    values_sorted = sorted(values, reverse=True)

    sum_values = 0
    keys_sorted = []
    values_sorted_persent = []
    for i in range(len(values_sorted)):
        sum_values += values_sorted[i]
        keys_sorted.append(keys[values.index(values_sorted[i])])
    for i in range(len(values_sorted)):
        values_sorted_persent.append (int(values_sorted[i] * 10000/sum_values))
        
    keys_sorted_searched = []  # в эту переменную кладутся профессии от нейронки
    for i in range(len(keys_sorted)):
        s = keys_sorted[i]
        s = (s.lower().split())
        s = vectorizer.transform(s).toarray()
        keys_sorted_searched.append(clf.predict(s)[0])

    # так получается, что в keys_sorted_searched values_sorted_persent 
    # могут быть отдельные значения одинаковых профессий, надо сложить
    dict_i = {}
    for i in range(len(keys_sorted_searched)):
        if not(keys_sorted_searched[i] in dict_i.keys()):
            dict_i.update({keys_sorted_searched[i] : values_sorted_persent[i]})
        else:
            dict_i.update({keys_sorted_searched[i] : dict_i[keys_sorted_searched[i]] + values_sorted_persent[i]})
    
    # корректировка значений
    undo_service = 0.65
    undo_culture = 0.70
    for key, value in dict_i.items():
        if key == 'Сфера обслуживания':
            dict_i.update({key : int(dict_i[key] * undo_service)})
        if key == 'Литература и тексты' or key == 'Искусство и культура':
            dict_i.update({key : int(dict_i[key] * undo_culture)})
            
    dict_sorted = {}
    keys_i = []
    values_i = []
    for key, value in dict_i.items():
        keys_i.append(key)
        values_i.append(value)
    values_i_sorted = sorted(values_i, reverse=True)
    keys_i_sorted = []
    
    sum_i = 0
    for i in range(len(values_i)):
        keys_i_sorted.append(keys_i[values_i.index(values_i_sorted[i])])
        sum_i += values_i_sorted[i]
    
    for i in range(len(keys_i_sorted)):
        dict_sorted.update({keys_i_sorted[i] : int(values_i_sorted[i] * 100 / sum_i)})
    
    return dict_sorted